mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
mutate(Return_year = prod(Return + 1) - 1) %>%
ungroup() %>%
select(Asset, Year, Return_year) %>%
unique() %>%
group_by(Asset) %>%
mutate(CVaR = CVaR(Return_year, p = 0.95, method = "historical"))
CVaR
mdd_from_returns <- Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),         # wealth index from returns
peak   = cummax(wealth),              # running peak of wealth
dd     = wealth/peak - 1               # drawdown (≤ 0)
) %>%
summarise(
mdd       = min(dd, na.rm = TRUE),     # max drawdown (negative)
mdd_pct   = 100 * mdd,                 # in percent
trough_dt = Date[which.min(dd)],       # trough date
peak_dt   = Date[which.max(wealth[1:which.min(dd)])],  # peak date before trough
.groups   = "drop"
)
mdd_from_returns
year_svg_cvar_3
year_svg_cvar_5
year_svg_cvar_10
library(lubridate)
tuw_from_returns <- Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
) %>%
# Identify drawdown periods by assigning drawdown IDs
mutate(
drawdown_id = cumsum(new_peak)  # increments at every new peak
) %>%
group_by(Asset, drawdown_id) %>%
summarise(
start_date = first(Date),       # peak date starting the drawdown
end_date = last(Date),          # recovery date (back at peak)
start_wealth = first(peak),
end_wealth = last(peak),
min_wealth = min(wealth),
.groups = "drop"
) %>%
# Filter only actual drawdowns (where min wealth < start wealth)
filter(min_wealth < start_wealth) %>%
# Calculate Time Under Water as difference in days
mutate(
tuw_days = as.numeric(end_date - start_date)
) %>%
group_by(Asset) %>%
summarise(
mean_tuw_days = mean(tuw_days, na.rm = TRUE),
median_tuw_days = median(tuw_days, na.rm = TRUE),
max_tuw_days = max(tuw_days, na.rm = TRUE),
drawdown_periods = n(),
.groups = "drop"
)
tuw_from_returns
tuw_from_returns <- Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
) %>%
# Identify drawdown periods by assigning drawdown IDs
mutate(
drawdown_id = cumsum(new_peak)  # increments at every new peak
) %>%
group_by(Asset, drawdown_id) %>%
summarise(
start_date = first(Date),       # peak date starting the drawdown
end_date = last(Date),          # recovery date (back at peak)
start_wealth = first(peak),
end_wealth = last(peak),
min_wealth = min(wealth),
.groups = "drop"
) %>%
# Filter only actual drawdowns (where min wealth < start wealth)
filter(min_wealth < start_wealth) %>%
# Calculate Time Under Water as difference in days
mutate(
tuw_days = as.numeric(end_date - start_date)
) %>%
group_by(Asset) %>%
summarise(
mean_tuw_days = mean(tuw_days, na.rm = TRUE),
#median_tuw_days = median(tuw_days, na.rm = TRUE),
#max_tuw_days = max(tuw_days, na.rm = TRUE),
#drawdown_periods = n(),
.groups = "drop"
)
tuw_from_returns
left_join(left_join(CVaR_y, mdd_from_returns, by = Asset), tuw_from_returns, by = Asset)
CVaR_y
mdd_from_returns
mdd_from_returns <- Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),         # wealth index from returns
peak   = cummax(wealth),              # running peak of wealth
dd     = wealth/peak - 1               # drawdown (≤ 0)
) %>%
summarise(
mdd       = min(dd, na.rm = TRUE),     # max drawdown (negative)
#mdd_pct   = 100 * mdd,                 # in percent
#trough_dt = Date[which.min(dd)],       # trough date
#peak_dt   = Date[which.max(wealth[1:which.min(dd)])],  # peak date before trough
.groups   = "drop"
)
mdd_from_returns
mdd_from_returns
tuw_from_returns
left_join(CVaR_y, mdd_from_returns, by = Asset)
left_join(left_join(CVaR_y, mdd_from_returns, by = "Asset"), tuw_from_returns, by = "Asset")
library(writexl)
# Join the data frames
final_df <- CVaR_y %>%
left_join(mdd_from_returns, by = "Asset") %>%
left_join(tuw_from_returns, by = "Asset")
final_df
# Export to Excel
write_xlsx(final_df, path = "Summary statistics Opgave 3")
# Export to Excel
write_xlsx(final_df, path = "Summary statistics Opgave 3.xlsx")
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1)
Return <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 1/Return.xlsx",col_types = c("date", "text", "numeric", "numeric"))
Return = Return %>% select(c(Date, Asset, Return)) %>% filter(Asset %in% c("Jyske Portefølje Vækst Akk KL","Jyske Portefølje Balanceret Akk KL","Jyske Portefølje Stabil Akk KL","Jyske Portefølje Dæmpet akk KL"))
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1)
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1)
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
mutate(avg_ret = mean(mean_week_ret))
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
group_by(Asset, Year) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
ungroup()
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
ungroup()
Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret))
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_5 = Return %>%
filter(year(Date) >= 2020 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret))
a
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_3 = Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret))
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_10 = Return %>%
filter(year(Date) >= 2015 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret))
individual_yearly_avg_ret_3
individual_yearly_avg_ret_5
individual_yearly_avg_ret_10
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_3 = Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
unique()
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_5 = Return %>%
filter(year(Date) >= 2020 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
unique()
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_10 = Return %>%
filter(year(Date) >= 2015 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
unique()
individual_yearly_avg_ret_3
individual_yearly_avg_ret_5
individual_yearly_avg_ret_10
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_3 = Return %>%
filter(year(Date) >= 2022 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
select(Asset, avg_ret) %>%
unique()
individual_yearly_avg_ret_3
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_5 = Return %>%
filter(year(Date) >= 2020 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
select(Asset, avg_ret) %>%
unique()
### Mean return by compounding indiviual weekly return------
individual_yearly_avg_ret_10 = Return %>%
filter(year(Date) >= 2015 & year(Date) <= 2024) %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
select(Asset, avg_ret) %>%
unique()
individual_yearly_avg_ret_3
individual_yearly_avg_ret_5
individual_yearly_avg_ret_10
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
)
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
) %>%
# Identify drawdown periods by assigning drawdown IDs
mutate(
drawdown_id = cumsum(new_peak)  # increments at every new peak
)
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
) %>%
# Identify drawdown periods by assigning drawdown IDs
mutate(
drawdown_id = cumsum(new_peak)  # increments at every new peak
) %>%
group_by(Asset, drawdown_id) %>%
summarise(
start_date = first(Date),       # peak date starting the drawdown
end_date = last(Date),          # recovery date (back at peak)
start_wealth = first(peak),
end_wealth = last(peak),
min_wealth = min(wealth),
.groups = "drop"
)
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
)
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),
peak = cummax(wealth),
dd = wealth / peak - 1,
# Flag where new peak occurs (wealth == peak and wealth > lag(peak))
new_peak = (wealth == peak) & (wealth > lag(peak, default = 0))
)
final_df
Return %>%
mutate(Date = as.Date(Date)) %>%
group_by(Asset) %>%
arrange(Date, .by_group = TRUE) %>%
mutate(
wealth = cumprod(1 + Return),         # wealth index from returns
peak   = cummax(wealth),              # running peak of wealth
dd     = wealth/peak - 1               # drawdown (≤ 0)
)
df %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Date) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs")
cov_matrix <- Return %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Date) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs")
cov_matrix
write_xlsx(cov_matrix, path = "COV Opgave 3.xlsx")
cov_matrix
cov_matrix <- data.frame(Return %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Date) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
write_xlsx(cov_matrix, path = "COV Opgave 3.xlsx")
Return <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 3/Return.xlsx",col_types = c("date", "text", "numeric", "numeric"))
Assets <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 3/Porteføljer.xlsx",col_types = c("text","text"))
Return = right_join(Return, Assets, by = c("Asset" = "Name")) %>% select(c(Date, Asset, Return)) %>% filter(year(Date) >= 2013 & year(Date) <= 2019)
cov_matrix <- data.frame(Return %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Date) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
write_xlsx(cov_matrix, path = "COV Opgave 3.xlsx")
Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
select(Asset, avg_ret) %>%
unique()
individual_yearly_avg_ret %>% as.data.frame() %>% cov(use = "pairwise.complete.obs")
individual_yearly_avg_ret = Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup() %>%
group_by(Asset) %>%
mutate(avg_ret = mean(mean_week_ret)) %>%
select(Asset, avg_ret) %>%
unique()
cov_matrix <- data.frame(individual_yearly_avg_ret %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
individual_yearly_avg_ret
individual_yearly_avg_ret = Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup()
individual_yearly_avg_ret
individual_yearly_avg_ret = Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(mean_week_ret = prod(1+Return)-1) %>%
ungroup()
cov_matrix <- data.frame(individual_yearly_avg_ret %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Year) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
cov_matrix
cov_matrix <- data.frame(individual_yearly_avg_ret %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Year) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
individual_yearly_avg_ret
ndividual_yearly_avg_ret %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Year)
individual_yearly_avg_ret %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Year)
individual_yearly_avg_ret
individual_yearly_avg_ret = Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1+Return)-1) %>%
ungroup()
cov_matrix <- data.frame(individual_yearly_avg_ret %>% pivot_wider(names_from = Asset, values_from = Return) %>% select(-Year) %>% as.data.frame() %>% cov(use = "pairwise.complete.obs"))
cov_matrix
write_xlsx(cov_matrix, path = "COV Opgave 3.xlsx")
individual_yearly_avg_ret <- Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
cov_matrix <- individual_yearly_avg_ret %>%
pivot_wider(names_from = Asset, values_from = Return) %>%
select(-Year) %>%
{ setNames(., gsub(" ", "_", names(.))) } %>%
as.data.frame() %>%
cov(use = "pairwise.complete.obs")
rownames(cov_matrix) <- colnames(cov_matrix)
cov_matrix
write_xlsx(as.data.frame.matrix(cov_matrix), path = "COV_Opgave_3.xlsx")
individual_yearly_avg_ret <- Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
cov_matrix <- individual_yearly_avg_ret %>%
pivot_wider(names_from = Asset, values_from = Return) %>%
select(-Year) %>%
{ setNames(., gsub(" ", "_", names(.))) } %>%
as.data.frame() %>%
cov(use = "pairwise.complete.obs")
rownames(cov_matrix) <- colnames(cov_matrix)
cov_df <- as.data.frame(cov_matrix)
cov_df <- cbind(Asset = rownames(cov_df), cov_df)
cov_df
individual_yearly_avg_ret <- Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
individual_yearly_avg_ret
Return
Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
Return
Return <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 3/Return.xlsx",col_types = c("date", "text", "numeric", "numeric"))
Return
Return %>%
filter(year(Date) >= 2013 & year(Date <= 2019))
Return
Return %>%
filter(year(Date) >= 2013 & year(Date) <= 2019)
Return <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 3/Return.xlsx",col_types = c("date", "text", "numeric", "numeric"))
Assets <- read_excel("~/Library/CloudStorage/OneDrive-KøbenhavnsUniversitet/Uni/6. År/PFO2025/Opgave 3/Porteføljer.xlsx",col_types = c("text","text"))
Return = right_join(Return, Assets, by = c("Asset" = "Name")) %>% select(c(Date, Asset, Return)) %>% filter(year(Date) >= 2013 & year(Date) <= 2019)
Return
write.csv(Return, "Return.csv", row.names = FALSE)
write.table(Return, file = "Return.inc",
row.names = FALSE, col.names = FALSE, quote = FALSE)
2+2
write.table(Return, file = "Return.inc",
row.names = FALSE, col.names = FALSE, quote = FALSE)
Return$Asset <- gsub(" ", "_", Return$Asset)
Return
write.table(Return,
file = "Return.inc",
row.names = FALSE, col.names = FALSE, quote = FALSE)
Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
individual_yearly_avg_ret
individual_yearly_avg_ret %>%
pivot_wider(names_from = Asset, values_from = Return) %>%
select(-Year)
individual_yearly_avg_ret
individual_yearly_avg_ret %>%
group_by(Asset) %>%
mutate(m = mean(Return)) %>%
select(Asset, m) %>%
unique()
Return
Return %>%
mutate(Year = year(Date))
Return %>%
mutate(Year = year(Date)) %>%
group_by(Asset, Year) %>%
summarise(Return = prod(1 + Return) - 1, .groups = "drop")
